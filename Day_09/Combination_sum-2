class Solution {
    public static void findCombination(int ind, int[] arr, int target, List<List<Integer>> ans, ArrayList<Integer> temp){
            if(target==0){
                ans.add(new ArrayList<>(temp));
                 return;
            }
        for(int i=ind; i<arr.length; i++){
            if(i>ind && arr[i]==arr[i-1]){
                continue;
            }
            if(arr[i]>target){ break;}
            temp.add(arr[i]);
            findCombination(i+1,arr,target-arr[i],ans,temp);
            temp.remove(temp.size()-1);
        }
        
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<List<Integer>>();
        Arrays.sort(candidates);
        findCombination(0,candidates,target,ans,new ArrayList<>());
        return ans;
    }
}