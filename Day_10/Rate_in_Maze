class Solution {
    public static void solveTable(int i, int j, int n, int[][] arr, String path, ArrayList<String> ans, int[][] vis, int[] di, int[] dj){
        if(i==n-1 && j==n-1){
            ans.add(path);
            return;
        }
        String dir="DLRU";
        for(int index=0; index<4; index++){
            int new_i=i+di[index];
            int new_j=j+dj[index];
            if(new_i>=0 && new_i<n && new_j>=0 && new_j<n && vis[new_i][new_j]==0 && arr[new_i][new_j]==1){
                vis[i][j]=1;
                solveTable(new_i,new_j,n,arr,path+dir.charAt(index),ans,vis,di,dj);
                vis[i][j]=0;
            }
        }
    }
    public static ArrayList<String> findPath(int[][] m, int n) {
        // Your code here
        ArrayList<String> ans=new ArrayList<>();
        int di[]={+1,0,0,-1};
        int dj[]={0,-1,+1,0};
        int[][] vis=new int[n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                vis[i][j]=0;
            }
        }
        if(m[0][0]==1) solveTable(0,0,n,m,"",ans,vis,di,dj);
        return ans;
    }
}