class Solution {
    public int[] twoSum(int[] nums, int target) {
        int ans[]=new int[2];
        Map<Integer,Integer> mp=new HashMap<>();
        for(int i=0; i<nums.length; i++){
            if(mp.containsKey(target-nums[i])){
                ans[1]=i;
                ans[0]=mp.get(target-nums[i]);
            }
            else{
                mp.put(nums[i],i);
            }
        }
        return ans;
        
        
        
//         int[] temp=new int[nums.length];
//         int x=0;
//         for(int i:nums){
//             temp[x++]=i;
//         }
//         Arrays.sort(temp);
//         int[] ans=new int[2];
//         int left=0,right=nums.length-1;
//         for(int i=0; i<nums.length; i++){
//             if(temp[left]+temp[right]==target){
//                 break;
//             }
//             else if(temp[left]+temp[right]>target){
//                 right--;
//             }
//             else{
//                 left++;
//             }
//         }
//         for(int i=0; i<nums.length; i++){
            
//             if(nums[i]==temp[left]){
//                  ans[0]=i;
//                  temp[left]=-1;
//             }
//             else if(nums[i]==temp[right]){
//                 ans[1]=i;
//             }
//         }
//         return ans;
    }
}