

class Solution {
    public long kthElement( int arr1[], int arr2[], int m, int n, int k) {
        
        if(m>n){
            return kthElement(arr2,arr1,n,m,k);
        }
        int low=Math.max(0,k-n);
        int high=Math.min(m,k);
        while(low<=high){
            int cut1=low+(high-low)/2;
            int cut2=k-cut1;
            
            int l1=(cut1>0)?arr1[cut1-1]:Integer.MIN_VALUE;
            int l2=(cut2>0)?arr2[cut2-1]:Integer.MIN_VALUE;
            
            int r1=(cut1==m)?Integer.MAX_VALUE:arr1[cut1];
            int r2=(cut2==n)?Integer.MAX_VALUE:arr2[cut2];
            
            if(l1<=r2 && l2<=r1){
                return Math.max(l1,l2);
            }
            else if(l1>r2){
                high=cut1-1;
            }
            else{
                low=cut1+1;
            }
        }
        return 1;
    }
}