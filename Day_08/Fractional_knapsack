class Solution
{
    class myComparator implements Comparator<Item>{
        @Override
        public int compare(Item a, Item b){
            double d1=(double)(a.value)/(double)(a.weight);
            double d2=(double)(b.value)/(double)(b.weight);
            if(d1<d2){return 1;}
            else if(d1>d2){return -1;}
            else{return 0;}
        }
        
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr, new myComparator());
        int curW=0;
        double maxValue=0;
        for(int i=0; i<n; i++){
            if(curW+arr[i].weight<W){
                curW+=arr[i].weight;
                maxValue+=arr[i].value;
            }
            else{
                int remW=W-curW;
                maxValue+=(double)(arr[i].value)/(double)(arr[i].weight)*(remW);
                break;
            }
        }
        return maxValue;
    }
}